MacroName MyFunctions
###################################
#
# Library of functions which can be called from a macro or a function.
#
# STATUS: functional
#
# M.Fislage & R. Efremov Jul 2020
#
# Credits to J. Brink, Chen Xu, Hening Stahlberg, Wim Hagen and David Mastronarde
# 
###################################

Function WaitForRefillingJ
# A script to check nitrogen refilling status.

AreDewarsFilling 
if ( $repVal1 != 0) 
     if  ( $repVal1 == 1)
             echo JEOL is filling Stage Tank, start filling SpecPorter Tank
             LongOperation RT 0
      endif
      if  ( $repVal1 == 2)
             echo JEOL is filling SpecPorter Tank, start filling Stage Tank
             LongOperation RS 0
      endif
      Loop 10
             echo Dewars are being filled    
             delay 3 min
             AreDewarsFilling 
             if  ( $repVal1 == 0) 
                    echo Dewars have been filled. Stabilizing scope for10 mins ...
                    UpdateHWDarkRef  0
                    delay 9 min
                    Break 
             Endif 
       EndLoop 
Else
   echo No need to refill dewars
endif

EndFunction

###################################

Function CenterBeam 1
# A function to center the beam in Trial mode
#

GoToLowDoseArea T # is it needed?
Trial
CenterBeamFromImage T
if ( $argVal1 == 1)
   Trial
endif

EndFunction

###################################

Function CycleDefocusTarget
# A function to change the target focus if needed

SuppressReports
Call Parameters

delta = -1 * $step

# if the current TargetDefocus is outside of range, make it as TD_low.
# Otherwise, increase a step of $delta

ReportTargetDefocus 
If $reportedValue1 > $TD_low OR $reportedValue1 < $TD_high
   SetTargetDefocus $TD_low
Else
   IncTargetDefocus $delta
Endif 

ReportTargetDefocus 
Echo Target defocus = $reportedValue1 mu

EndFunction

#######################################

##Low beam Intensity warning
Function Nobeam

   ReportMeanCounts
   if $reportedValue1 < $IntensityThreshold
      LowCount := $LowCount + 1
   endif
   echo Mean Count: $reportedValue1
   echo Number of Low intensity image is $LowCount
   if $LowCount > $NoLowCountImages
      SendEmail 'So far $LowCount low count images. Last measured intensity $reportedValue1'
      LowCount := 0 
      echo 'Low intensity email sent'
   endif
EndFunction 

#######################################

Function MultiShot

Call Parameters

if $shottype == 0
IS_RAD = $offset
ReportImageShift
X0 = $reportedValue1
Y0 = $reportedValue2
ReportBeamTilt
tilt_x0 = $reportedValue1
tilt_y0 = $reportedValue2

ReportObjectiveStigmator
stig_x0 = $reportedValue1
stig_y0 = $reportedValue2


loop $#hole_coord_x hcount
   loop $shots  icount  
      IS_ANGLE = ( $icount - 1 ) * 360 / $shots
      IS_X = $IS_RAD * cos ( $IS_ANGLE)
      IS_Y = $IS_RAD * sin ( $IS_ANGLE)
      # calculating IS
      shift_X = $hole_coord_x[$hcount] * $VECTOR1[1] + $hole_coord_y[$hcount] * $VECTOR2[1] + $IS_X * $IS_shift_x_micron[1] + $IS_Y * $IS_shift_y_micron[1] + $X0
      shift_Y = $hole_coord_x[$hcount] * $VECTOR1[2] + $hole_coord_y[$hcount] * $VECTOR2[2] + $IS_X * $IS_shift_x_micron[2] + $IS_Y * $IS_shift_y_micron[2] + $Y0
      # calculating coma TILT compensation
      tilt_x = $shift_X * $ComaISmatrix[1] + $shift_Y * $ComaISmatrix[2] 
      tilt_y = $shift_X * $ComaISmatrix[3] + $shift_Y * $ComaISmatrix[4]
      # calculating STIG tilt compensation
      stig_x = $shift_X * $ComaSTIGmatrix[1] + $shift_Y * $ComaSTIGmatrix[2] 
      stig_y = $shift_X * $ComaSTIGmatrix[3] + $shift_Y * $ComaSTIGmatrix[4]
      echo Take image at hole $hcount  angle $IS_ANGLE 
    
      SetImageShift  $shift_X $shift_Y 
      SetBeamTilt ( $tilt_x + $tilt_x0 ) ( $tilt_y + $tilt_y0 )
      SetObjectiveStigmator ( $stig_x + $stig_x0 )  ( $stig_y + $stig_y0 )  
      Delay $msdelay
      #EarlyReturnNextShot $earlyold
      R  
    endloop
endloop
endif

if $shottype == 1  
   Delay $wait_time 
   MultipleRecords $shots $center $offset $msdelay 0 $earlyreturn $earlyframes $multihole
endif
if $shottype == 2   ##uses informaition entered in serialEM panel
   Delay $wait_time
   MultipleRecords
endif

ReportMeanCounts
   I_FILT_IN = $reportedValue1
   THICKNESS = 330 * log ( $I_EMPTY  / $I_FILT_IN )
   echo APERTURE  ICE THICKNESS is $THICKNESS nm
if  (  MODULO ( $NN $ICE_FREQ )  == 0 )
   L
   ReportMeanCounts
   I_FILT_IN_sh = $reportedValue1
   SetLowDoseMode 0
   SetSlitIn 0
   L
   ReportMeanCounts
   I_FILT_OUT_sh = $reportedValue1
   THICKNESS = 400 * log ( $I_FILT_OUT_sh / $I_FILT_IN_sh )
   echo FILTER  ICE THICKNESS is $THICKNESS nm
   I_EMPTY = exp ( $THICKNESS / 330 ) * $I_FILT_IN 
   echo EMPTY BEAM INTENSITY I0 is $I_EMPTY 
   SetSlitIn 1
   SetLowDoseMode 1
   GoToLowDoseArea R
   endif 
EndFunction
